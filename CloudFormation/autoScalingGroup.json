{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Deploy an Autoscaled Group of Instances. Authored by Daniel Wright - http://iamaman.com.au",
	"Parameters": {
		"ec2ImageParameter": {
			"Type": "String",
			"Default": "ami-e83a4288"
		},
		"vpcId": {
			"Description": "Select a VPC-ID to use",
			"Type": "AWS::EC2::VPC::Id"
		},
		"publicSubnet1": {
			"Description": "Availability Zone 1 Public Subnet",
			"Type": "AWS::EC2::Subnet::Id"
		},
		"publicSubnet2": {
			"Description": "Availability Zone 2 Public Subnet",
			"Type": "AWS::EC2::Subnet::Id"
		},
		"privateSubnet1": {
			"Description": "Availability Zone 1 Private Subnet",
			"Type": "AWS::EC2::Subnet::Id"
		},
		"privateSubnet2": {
			"Description": "Availability Zone 2 Private Subnet",
			"Type": "AWS::EC2::Subnet::Id"
		}
	},
	"Resources": {
		"allowAllSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"Tags": [{
					"Key": "Name",
					"Value": "allow_all"
				}],
				"GroupDescription": "Allow All Traffic",
				"VpcId": {
					"Ref": "vpcId"
				},
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": "0",
					"ToPort": "65535",
					"CidrIp": "0.0.0.0/0"
				}],
				"SecurityGroupEgress": [{
					"IpProtocol": "tcp",
					"FromPort": "0",
					"ToPort": "65535",
					"CidrIp": "0.0.0.0/0"
				}]
			}
		},
		"elasticLoadBalancer": {
			"Type": "AWS::ElasticLoadBalancing::LoadBalancer",
			"Properties": {
				"Subnets": [{
					"Ref": "publicSubnet1"
				}, {
					"Ref": "publicSubnet2"
				}],
				"Listeners": [{
					"LoadBalancerPort": "80",
					"InstancePort": "8080",
					"Protocol": "HTTP"
				}],
				"HealthCheck": {
					"Target": "HTTP:8080/",
					"HealthyThreshold": "3",
					"UnhealthyThreshold": "5",
					"Interval": "30",
					"Timeout": "5"
				},
				"SecurityGroups": [{
					"Ref": "allowAllSecurityGroup"
				}]
			}
		},
		"launchConfiguration": {
			"Type": "AWS::AutoScaling::LaunchConfiguration",
			"Properties": {
				"KeyName": "NT",
				"ImageId": {
					"Ref": "ec2ImageParameter"
				},
				"SecurityGroups": [{
					"Ref": "allowAllSecurityGroup"
				}],
				"InstanceType": "t2.micro"
			}
		},
		"autoScalingGroup": {
			"UpdatePolicy": {
				"AutoScalingRollingUpdate": {
					"MinInstancesInService": "1",
					"MaxBatchSize": "1",
					"PauseTime": "PT12M5S"
				}
			},
			"Type": "AWS::AutoScaling::AutoScalingGroup",
			"UpdatePolicy": {
				"AutoScalingRollingUpdate": {
					"MinInstancesInService": "1",
					"MaxBatchSize": "1",
					"PauseTime": "PT12M5S"
				}
			},
			"Properties": {
				"VPCZoneIdentifier": [{
					"Ref": "privateSubnet1"
				}, {
					"Ref": "privateSubnet2"
				}],
				"LaunchConfigurationName": {
					"Ref": "launchConfiguration"
				},
				"MinSize": "2",
				"MaxSize": "4",
				"LoadBalancerNames": [{
					"Ref": "elasticLoadBalancer"
				}],
				"MetricsCollection": [{
					"Granularity": "1Minute",
					"Metrics": [
						"GroupMinSize",
						"GroupMaxSize"
					]
				}]
			}
		}
	},
	"Outputs": {
		"allowAllSecurityGroup": {
			"Description": "Securtiy Group Allowing All Traffic",
			"Value": {
				"Ref": "allowAllSecurityGroup"
			}
		},
		"elasticLoadBalancer": {
			"Description": "ELB for AutoScaling Group",
			"Value": {
				"Ref": "elasticLoadBalancer"
			}
		},
		"launchConfiguration": {
			"Description": "Launch Config for AutoScaling Group",
			"Value": {
				"Ref": "launchConfiguration"
			}
		},
		"autoScalingGroup": {
			"Description": "AutoScaling Group Containing Instances",
			"Value": {
				"Ref": "autoScalingGroup"
			}
		}
	}
}
