---
- name: find current Windows AMI in this region
  ec2_ami_find:
    region: "{{ target_aws_region }}"
    platform: windows
    virtualization_type: hvm
    owner: amazon
    name: Windows_Server-2012-R2_RTM-English-64Bit-Base-*
    no_result_action: fail
    sort: name
    sort_order: descending
  register: found_amis

- set_fact:
    win_ami_id: "{{ (found_amis.results | first).ami_id  }}"

- name: ensure instances are running
  ec2:
    region: "{{ target_aws_region }}"
    image: "{{ win_ami_id }}"
    instance_type: "{{ instance_type }}"
    zone: "{{ build_zone }}"
    vpc_subnet_id: "{{ build_subnet }}"
    group_id: "{{ security_group_id }}"
    wait: yes
    wait_timeout: 500
    exact_count: 1
    count_tag:
      Name: "{{ jira_item }}-windows-build"
    instance_tags:
      Name: "{{ jira_item }}-windows-build"
    user_data: "{{ lookup('template', 'user_data.txt.j2') }}"
  register: ec2_result

- name: wait for WinRM to answer on all hosts
  wait_for:
    port: 5985
    host: "{{ item.public_ip }}"
    timeout: 300
  with_items: ec2_result.tagged_instances

- name: Update DNS
  route53:
    command: create
    overwrite: yes
    zone: "{{ domain }}"
    record: "www.{{ jira_item }}-{{ target_env }}.{{ domain }}"
    type: A
    ttl: 300
    value: "{{ item.public_ip }}"
  register: dns_record
  with_items: ec2_result.tagged_instances

- name: add hosts to groups
  add_host:
    name: "win-temp-{{ item.id }}"
    ansible_ssh_host: "{{ item.public_ip }}"
    groups: win
  changed_when: false
  with_items: ec2_result.tagged_instances
